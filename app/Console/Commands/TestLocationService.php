<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Services\LocationService;

class TestLocationService extends Command
{
    protected $signature = 'location:test {latitude} {longitude}';
    protected $description = 'Test LocationService v·ªõi t·ªça ƒë·ªô c·ª• th·ªÉ';

    public function handle()
    {
        $latitude = (float) $this->argument('latitude');
        $longitude = (float) $this->argument('longitude');

        $this->info("üìç Test LocationService v·ªõi t·ªça ƒë·ªô: {$latitude}, {$longitude}");
        $this->newLine();

        $locationService = new LocationService();
        $locationInfo = $locationService->getLocationInfo($latitude, $longitude);

        if ($locationInfo) {
            $this->info("üèôÔ∏è  K·∫øt qu·∫£:");
            $this->info("   T·ªânh: {$locationInfo['province_name']}");
            $this->info("   M√£ t·ªânh: {$locationInfo['province_code']}");
            $this->info("   V√πng mi·ªÅn: {$locationInfo['region']}");
            $this->info("   T·ªça ƒë·ªô t·ªânh: {$locationInfo['latitude']}, {$locationInfo['longitude']}");
            $this->info("   Ch√≠nh x√°c: " . ($locationInfo['is_exact'] ? '‚úÖ C√≥' : '‚ö†Ô∏è Kh√¥ng (t√¨m t·ªânh g·∫ßn nh·∫•t)'));

            if (isset($locationInfo['distance'])) {
                $this->info("   Kho·∫£ng c√°ch: " . number_format($locationInfo['distance'], 2) . " km");
            }
        } else {
            $this->error("‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin t·ªânh");
        }

        return 0;
    }
}
