<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\VietnamCity;

class CheckVietnamCities extends Command
{
    protected $signature = 'vietnam:check-cities';
    protected $description = 'Ki·ªÉm tra d·ªØ li·ªáu th√†nh ph·ªë Vi·ªát Nam trong database';

    public function handle()
    {
        $this->info('üîç Ki·ªÉm tra d·ªØ li·ªáu th√†nh ph·ªë Vi·ªát Nam...');

        $totalCities = VietnamCity::count();
        $this->info("üìä T·ªïng s·ªë th√†nh ph·ªë: {$totalCities}");

        if ($totalCities > 0) {
            $this->info('üìã 10 th√†nh ph·ªë ƒë·∫ßu ti√™n:');
            $cities = VietnamCity::take(10)->get();
            
            foreach ($cities as $city) {
                $status = $city->is_active ? '‚úÖ' : '‚ùå';
                $this->info("   {$status} {$city->name} (Code: {$city->code}, Region: {$city->region})");
            }

            // Th·ªëng k√™ theo v√πng mi·ªÅn
            $regions = VietnamCity::selectRaw('region, COUNT(*) as count')
                ->groupBy('region')
                ->pluck('count', 'region')
                ->toArray();

            $this->newLine();
            $this->info('üìà Th·ªëng k√™ theo v√πng mi·ªÅn:');
            foreach ($regions as $region => $count) {
                $this->info("   üìç {$region}: {$count} th√†nh ph·ªë");
            }

            // Ki·ªÉm tra d·ªØ li·ªáu API
            $withApiData = VietnamCity::whereNotNull('api_data')->count();
            $this->newLine();
            $this->info("üîó C√≥ d·ªØ li·ªáu API: {$withApiData}/{$totalCities}");
        } else {
            $this->warn('‚ö†Ô∏è  Kh√¥ng c√≥ d·ªØ li·ªáu th√†nh ph·ªë n√†o trong database');
        }

        return 0;
    }
} 